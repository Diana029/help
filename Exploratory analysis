##### 1. Проверяем на наличие пропусков NaN
for col in df.columns:
    nan_numbers = df[pd.isnull(df[col])].shape[0]
    if nan_numbers > 0:
        print(col, nan_numbers)

print ("Столбцов с NaN в датасете: {}".format(df.loc[:, df.isnull().any()].shape)) 

##### 2. Смотрим на соотношение классов в выборке
y = df['LABEL']
X = df.drop(['LABEL'],axis=1)
shape(X), shape(df)
print ("Not opened credit product 0: {}, \n Opened credit product 1: {}".format(
    1.0-(y.sum()/float(len(y))),
    y.sum()/float(len(y)))) 


##### 3. Scaling
def data_preprocess(df):
    final_data = df.copy()
    std_scaler = StandardScaler()
    final_data = std_scaler.fit_transform(final_data)
    return final_data

##### 4. Статистика по выборке
df.describe().T
